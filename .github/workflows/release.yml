name: release

on:
  push:
  pull_request:
    branches: [master]

jobs:
  build:
    name: |
      Build Python distributions.

    strategy:
      matrix:
        # python-version: ["3.10", "3.11"]
        python-version: ["3.10"]
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build
        run: |
          make build

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*

  release:
    name: |
      Create a GitHub Release.
      Publish to PyPI and GitHub Releases if tagged,
      or publish to TestPyPI otherwise.

    needs: [build]

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Publish distribution package to TestPyPI
        continue-on-error: true
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Publish distribution package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/v')

      - name: Release package to GitHub
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          title: "test.pypi ${{ github.ref_name	}}"
          files: |
            LICENSE
            dist/*
        if: startsWith(github.ref, 'refs/tags/v')
